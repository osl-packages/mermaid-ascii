name: main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          environment-file: conda/env.yaml
          channels: conda-forge,nodefaults
          activate-environment: mermaidascii
          auto-update-conda: true
          conda-solver: libmamba
          python-version: "3.11"

      # Build OS-specific mermaid-ascii binary and place it under src/...
      # (scripts/binary.sh handles .exe on Windows)
      - name: Build upstream binary
        run: |
          bash ./scripts/binary.sh

      - name: Build & install package
        run: |
          poetry build
          python -m pip install -U pip
          # Prefer the wheel (platform-specific), fallback to sdist
          python -m pip install dist/*.whl || python -m pip install dist/*.tar.gz

      - name: Test cmd & binary
        run: make smoke-test
